// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Dialog/> matches snapshot 1`] = `
<Dialog
  canCancel={true}
  cancelText="cancel"
  confirmText="confirm"
  description="this is description"
  isHideButton={false}
  isVisible={true}
  title="this is title"
>
  <Styled(styled.div)>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "bTpMkn",
            "rules": Array [
              "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
              "
  z-index: 9999;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-bdVaJa",
          ],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa sc-bwzfXH bTpMkn"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "cnbCtX",
                  "rules": Array [
                    "
  display: flex;
  align-items: center;
  justify-content: center;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-htpNat cnbCtX"
            >
              <Styled(styled.div)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": false,
                        "lastClassName": "gmVLnA",
                        "rules": Array [
                          "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                          "
  flex-direction: column;
  border-radius:1rem;
  
  background-color: white;
  width: 20rem;
  padding: 2rem;

  box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.75);
",
                        ],
                      },
                      "displayName": "Styled(styled.div)",
                      "foldedComponentIds": Array [
                        "sc-bdVaJa",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-bdVaJa sc-bxivhb gmVLnA"
                  >
                    <styled.p>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-ifAKCX",
                              "isStatic": false,
                              "lastClassName": "YleXk",
                              "rules": Array [
                                "
  font-size: ",
                                "1.2rem",
                                ";
  color: ",
                                "#4B4B4B",
                                ";
  font-weight: ",
                                "600",
                                ";
  margin-right: auto;
  padding:1rem;
",
                              ],
                            },
                            "displayName": "styled.p",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-ifAKCX",
                            "target": "p",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <p
                          className="sc-ifAKCX YleXk"
                        >
                          this is title
                        </p>
                      </StyledComponent>
                    </styled.p>
                    <styled.p>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-EHOje",
                              "isStatic": false,
                              "lastClassName": "kURyIg",
                              "rules": Array [
                                "
  font-size: ",
                                "1rem",
                                ";
  color: ",
                                "#4B4B4B",
                                ";
  font-weight: ",
                                "400",
                                ";
  margin-right: auto;
",
                              ],
                            },
                            "displayName": "styled.p",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-EHOje",
                            "target": "p",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <p
                          className="sc-EHOje kURyIg"
                        >
                          this is description
                        </p>
                      </StyledComponent>
                    </styled.p>
                    <ButtonGroup
                      right={true}
                    >
                      <Styled(styled.div)
                        direction="row"
                        right={true}
                      >
                        <StyledComponent
                          direction="row"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-gzVnrw",
                                "isStatic": false,
                                "lastClassName": "iqggKt",
                                "rules": Array [
                                  "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                                  "
  flex-direction: ",
                                  [Function],
                                  ";
  justify-content: ",
                                  [Function],
                                  ";
  margin:1rem;
",
                                ],
                              },
                              "displayName": "Styled(styled.div)",
                              "foldedComponentIds": Array [
                                "sc-bdVaJa",
                              ],
                              "render": [Function],
                              "styledComponentId": "sc-gzVnrw",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          right={true}
                        >
                          <div
                            className="sc-bdVaJa sc-gzVnrw iqggKt"
                            direction="row"
                          >
                            <Button
                              text="confirm"
                              theme="primary"
                            >
                              <ThemeProvider
                                theme={
                                  Object {
                                    "background": "#F7CF46",
                                  }
                                }
                              >
                                <styled.button
                                  isAllowed={true}
                                  type="button"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bZQynM",
                                          "isStatic": false,
                                          "lastClassName": "cUkGfo",
                                          "rules": Array [
                                            "
  width: 5rem;
  height: 2rem;
  color: ",
                                            "#4B4B4B",
                                            ";
  font-size: ",
                                            "0.8rem",
                                            ";
  font-weight: ",
                                            "400",
                                            ";

  margin: 0.5rem;

  background-color: ",
                                            [Function],
                                            ";

  outline: none;
  border-radius: 1rem;
  border: none;
  cursor: ",
                                            [Function],
                                            ";

  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;


  &:hover{
    background-color: ",
                                            [Function],
                                            ";
  }
",
                                          ],
                                        },
                                        "displayName": "styled.button",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bZQynM",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isAllowed={true}
                                    type="button"
                                  >
                                    <button
                                      className="sc-bZQynM haAQrh"
                                      type="button"
                                    >
                                      confirm
                                    </button>
                                  </StyledComponent>
                                </styled.button>
                              </ThemeProvider>
                            </Button>
                            <Button
                              text="cancel"
                              theme="tertiary"
                            >
                              <ThemeProvider
                                theme={
                                  Object {
                                    "background": "#C6C3C1",
                                  }
                                }
                              >
                                <styled.button
                                  isAllowed={true}
                                  type="button"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bZQynM",
                                          "isStatic": false,
                                          "lastClassName": "cUkGfo",
                                          "rules": Array [
                                            "
  width: 5rem;
  height: 2rem;
  color: ",
                                            "#4B4B4B",
                                            ";
  font-size: ",
                                            "0.8rem",
                                            ";
  font-weight: ",
                                            "400",
                                            ";

  margin: 0.5rem;

  background-color: ",
                                            [Function],
                                            ";

  outline: none;
  border-radius: 1rem;
  border: none;
  cursor: ",
                                            [Function],
                                            ";

  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;


  &:hover{
    background-color: ",
                                            [Function],
                                            ";
  }
",
                                          ],
                                        },
                                        "displayName": "styled.button",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bZQynM",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isAllowed={true}
                                    type="button"
                                  >
                                    <button
                                      className="sc-bZQynM cUkGfo"
                                      type="button"
                                    >
                                      cancel
                                    </button>
                                  </StyledComponent>
                                </styled.button>
                              </ThemeProvider>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Styled(styled.div)>
                    </ButtonGroup>
                  </div>
                </StyledComponent>
              </Styled(styled.div)>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </Styled(styled.div)>
</Dialog>
`;
