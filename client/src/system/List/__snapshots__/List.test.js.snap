// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<List/> matches snapshot 1`] = `
<List>
  <Styled(styled.div)>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "gKXlhP",
            "rules": Array [
              "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
              "
  flex-direction: column;
  justify-content: flex-start;
  width: auto;
  height: 100vh;
  float:left;
  justify-content: flex-start;
  margin-right: auto;
  width: 100%;
  /* min-width: 20rem; */
",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-bdVaJa",
          ],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa sc-bwzfXH gKXlhP"
      >
        <Profile
          id="asd"
          statusMessage="asd"
          userName="asd"
        >
          <Styled(styled.div)>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": false,
                    "lastClassName": "bAzgNt",
                    "rules": Array [
                      "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                      "
  width: 20rem;
  height: 13rem;
  flex-direction: column;
  background-color: ",
                      "#FEFFFF",
                      ";
  align-items: center;
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-bdVaJa",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-bdVaJa sc-bxivhb bAzgNt"
              >
                <Icon
                  color="#C6C3C1"
                  icon="PersonFilled"
                  size="4rem"
                >
                  <ForwardRef(SvgPersonFilled)
                    fill="#C6C3C1"
                    height="4rem"
                    width="4rem"
                  >
                    <svg
                      fill="#C6C3C1"
                      height="4rem"
                      width="4rem"
                    >
                      person-filled.svg
                    </svg>
                  </ForwardRef(SvgPersonFilled)>
                </Icon>
                <styled.span>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "GDQcq",
                          "rules": Array [
                            "
  font-size: ",
                            "1rem",
                            ";
  line-height: 2.5rem;

",
                          ],
                        },
                        "displayName": "styled.span",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <span
                      className="sc-ifAKCX GDQcq"
                    >
                      asd
                    </span>
                  </StyledComponent>
                </styled.span>
                <styled.p>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "QkBzz",
                          "rules": Array [
                            "
    margin: 0;
",
                          ],
                        },
                        "displayName": "styled.p",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "p",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <p
                      className="sc-EHOje QkBzz"
                    >
                      asd
                    </p>
                  </StyledComponent>
                </styled.p>
                <Styled(styled.div)>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": false,
                          "lastClassName": "cheTxh",
                          "rules": Array [
                            "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                            "
  justify-content: space-evenly;
",
                          ],
                        },
                        "displayName": "Styled(styled.div)",
                        "foldedComponentIds": Array [
                          "sc-bdVaJa",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="sc-bdVaJa sc-bZQynM cheTxh"
                    >
                      <TextIcon
                        color="#C6C3C1"
                        icon="Send"
                        iconPosition="top"
                        onClick={[Function]}
                        text="1:1 채팅"
                        textColor="#4B4B4B"
                      >
                        <styled.div
                          iconPosition="top"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": false,
                                  "lastClassName": "bWzuYP",
                                  "rules": Array [
                                    "
    display: flex;
    flex-direction: ",
                                    [Function],
                                    ";
    width: fit-content;
    height: fit-content;
    align-items: center;
    justify-content: center;
  ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconPosition="top"
                            onClick={[Function]}
                          >
                            <div
                              className="sc-dnqmqq bWzuYP"
                              onClick={[Function]}
                            >
                              <Icon
                                color="#C6C3C1"
                                icon="Send"
                              >
                                <ForwardRef(SvgSend)
                                  fill="#C6C3C1"
                                  height="2rem"
                                  width="2rem"
                                >
                                  <svg
                                    fill="#C6C3C1"
                                    height="2rem"
                                    width="2rem"
                                  >
                                    send.svg
                                  </svg>
                                </ForwardRef(SvgSend)>
                              </Icon>
                              <styled.span
                                text="1:1 채팅"
                                textColor="#4B4B4B"
                                textSize="1rem"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-iwsKbI",
                                        "isStatic": false,
                                        "lastClassName": "kRbEdh",
                                        "rules": Array [
                                          "
    color: ",
                                          [Function],
                                          ";
    line-height: 2rem;
    padding: 1rem;
  ",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-iwsKbI",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  text="1:1 채팅"
                                  textColor="#4B4B4B"
                                  textSize="1rem"
                                >
                                  <span
                                    className="sc-iwsKbI kRbEdh"
                                  >
                                    1:1 채팅
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TextIcon>
                      <TextIcon
                        color="#C6C3C1"
                        icon="Close"
                        iconPosition="top"
                        onClick={[Function]}
                        text="삭제"
                        textColor="#4B4B4B"
                      >
                        <styled.div
                          iconPosition="top"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": false,
                                  "lastClassName": "bWzuYP",
                                  "rules": Array [
                                    "
    display: flex;
    flex-direction: ",
                                    [Function],
                                    ";
    width: fit-content;
    height: fit-content;
    align-items: center;
    justify-content: center;
  ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconPosition="top"
                            onClick={[Function]}
                          >
                            <div
                              className="sc-dnqmqq bWzuYP"
                              onClick={[Function]}
                            >
                              <Icon
                                color="#C6C3C1"
                                icon="Close"
                              >
                                <ForwardRef(SvgClose)
                                  fill="#C6C3C1"
                                  height="2rem"
                                  width="2rem"
                                >
                                  <svg
                                    fill="#C6C3C1"
                                    height="2rem"
                                    width="2rem"
                                  >
                                    close.svg
                                  </svg>
                                </ForwardRef(SvgClose)>
                              </Icon>
                              <styled.span
                                text="삭제"
                                textColor="#4B4B4B"
                                textSize="1rem"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-iwsKbI",
                                        "isStatic": false,
                                        "lastClassName": "kRbEdh",
                                        "rules": Array [
                                          "
    color: ",
                                          [Function],
                                          ";
    line-height: 2rem;
    padding: 1rem;
  ",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-iwsKbI",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  text="삭제"
                                  textColor="#4B4B4B"
                                  textSize="1rem"
                                >
                                  <span
                                    className="sc-iwsKbI kRbEdh"
                                  >
                                    삭제
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TextIcon>
                    </div>
                  </StyledComponent>
                </Styled(styled.div)>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </Profile>
        <Profile
          id="asd"
          statusMessage="asd"
          userName="asd"
        >
          <Styled(styled.div)>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": false,
                    "lastClassName": "bAzgNt",
                    "rules": Array [
                      "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                      "
  width: 20rem;
  height: 13rem;
  flex-direction: column;
  background-color: ",
                      "#FEFFFF",
                      ";
  align-items: center;
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-bdVaJa",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-bdVaJa sc-bxivhb bAzgNt"
              >
                <Icon
                  color="#C6C3C1"
                  icon="PersonFilled"
                  size="4rem"
                >
                  <ForwardRef(SvgPersonFilled)
                    fill="#C6C3C1"
                    height="4rem"
                    width="4rem"
                  >
                    <svg
                      fill="#C6C3C1"
                      height="4rem"
                      width="4rem"
                    >
                      person-filled.svg
                    </svg>
                  </ForwardRef(SvgPersonFilled)>
                </Icon>
                <styled.span>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "GDQcq",
                          "rules": Array [
                            "
  font-size: ",
                            "1rem",
                            ";
  line-height: 2.5rem;

",
                          ],
                        },
                        "displayName": "styled.span",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <span
                      className="sc-ifAKCX GDQcq"
                    >
                      asd
                    </span>
                  </StyledComponent>
                </styled.span>
                <styled.p>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "QkBzz",
                          "rules": Array [
                            "
    margin: 0;
",
                          ],
                        },
                        "displayName": "styled.p",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "p",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <p
                      className="sc-EHOje QkBzz"
                    >
                      asd
                    </p>
                  </StyledComponent>
                </styled.p>
                <Styled(styled.div)>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": false,
                          "lastClassName": "cheTxh",
                          "rules": Array [
                            "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                            "
  justify-content: space-evenly;
",
                          ],
                        },
                        "displayName": "Styled(styled.div)",
                        "foldedComponentIds": Array [
                          "sc-bdVaJa",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="sc-bdVaJa sc-bZQynM cheTxh"
                    >
                      <TextIcon
                        color="#C6C3C1"
                        icon="Send"
                        iconPosition="top"
                        onClick={[Function]}
                        text="1:1 채팅"
                        textColor="#4B4B4B"
                      >
                        <styled.div
                          iconPosition="top"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": false,
                                  "lastClassName": "bWzuYP",
                                  "rules": Array [
                                    "
    display: flex;
    flex-direction: ",
                                    [Function],
                                    ";
    width: fit-content;
    height: fit-content;
    align-items: center;
    justify-content: center;
  ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconPosition="top"
                            onClick={[Function]}
                          >
                            <div
                              className="sc-dnqmqq bWzuYP"
                              onClick={[Function]}
                            >
                              <Icon
                                color="#C6C3C1"
                                icon="Send"
                              >
                                <ForwardRef(SvgSend)
                                  fill="#C6C3C1"
                                  height="2rem"
                                  width="2rem"
                                >
                                  <svg
                                    fill="#C6C3C1"
                                    height="2rem"
                                    width="2rem"
                                  >
                                    send.svg
                                  </svg>
                                </ForwardRef(SvgSend)>
                              </Icon>
                              <styled.span
                                text="1:1 채팅"
                                textColor="#4B4B4B"
                                textSize="1rem"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-iwsKbI",
                                        "isStatic": false,
                                        "lastClassName": "kRbEdh",
                                        "rules": Array [
                                          "
    color: ",
                                          [Function],
                                          ";
    line-height: 2rem;
    padding: 1rem;
  ",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-iwsKbI",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  text="1:1 채팅"
                                  textColor="#4B4B4B"
                                  textSize="1rem"
                                >
                                  <span
                                    className="sc-iwsKbI kRbEdh"
                                  >
                                    1:1 채팅
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TextIcon>
                      <TextIcon
                        color="#C6C3C1"
                        icon="Close"
                        iconPosition="top"
                        onClick={[Function]}
                        text="삭제"
                        textColor="#4B4B4B"
                      >
                        <styled.div
                          iconPosition="top"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": false,
                                  "lastClassName": "bWzuYP",
                                  "rules": Array [
                                    "
    display: flex;
    flex-direction: ",
                                    [Function],
                                    ";
    width: fit-content;
    height: fit-content;
    align-items: center;
    justify-content: center;
  ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconPosition="top"
                            onClick={[Function]}
                          >
                            <div
                              className="sc-dnqmqq bWzuYP"
                              onClick={[Function]}
                            >
                              <Icon
                                color="#C6C3C1"
                                icon="Close"
                              >
                                <ForwardRef(SvgClose)
                                  fill="#C6C3C1"
                                  height="2rem"
                                  width="2rem"
                                >
                                  <svg
                                    fill="#C6C3C1"
                                    height="2rem"
                                    width="2rem"
                                  >
                                    close.svg
                                  </svg>
                                </ForwardRef(SvgClose)>
                              </Icon>
                              <styled.span
                                text="삭제"
                                textColor="#4B4B4B"
                                textSize="1rem"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-iwsKbI",
                                        "isStatic": false,
                                        "lastClassName": "kRbEdh",
                                        "rules": Array [
                                          "
    color: ",
                                          [Function],
                                          ";
    line-height: 2rem;
    padding: 1rem;
  ",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-iwsKbI",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  text="삭제"
                                  textColor="#4B4B4B"
                                  textSize="1rem"
                                >
                                  <span
                                    className="sc-iwsKbI kRbEdh"
                                  >
                                    삭제
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TextIcon>
                    </div>
                  </StyledComponent>
                </Styled(styled.div)>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </Profile>
        <Profile
          id="asd"
          statusMessage="asd"
          userName="asd"
        >
          <Styled(styled.div)>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": false,
                    "lastClassName": "bAzgNt",
                    "rules": Array [
                      "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                      "
  width: 20rem;
  height: 13rem;
  flex-direction: column;
  background-color: ",
                      "#FEFFFF",
                      ";
  align-items: center;
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-bdVaJa",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-bdVaJa sc-bxivhb bAzgNt"
              >
                <Icon
                  color="#C6C3C1"
                  icon="PersonFilled"
                  size="4rem"
                >
                  <ForwardRef(SvgPersonFilled)
                    fill="#C6C3C1"
                    height="4rem"
                    width="4rem"
                  >
                    <svg
                      fill="#C6C3C1"
                      height="4rem"
                      width="4rem"
                    >
                      person-filled.svg
                    </svg>
                  </ForwardRef(SvgPersonFilled)>
                </Icon>
                <styled.span>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "GDQcq",
                          "rules": Array [
                            "
  font-size: ",
                            "1rem",
                            ";
  line-height: 2.5rem;

",
                          ],
                        },
                        "displayName": "styled.span",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <span
                      className="sc-ifAKCX GDQcq"
                    >
                      asd
                    </span>
                  </StyledComponent>
                </styled.span>
                <styled.p>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "QkBzz",
                          "rules": Array [
                            "
    margin: 0;
",
                          ],
                        },
                        "displayName": "styled.p",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "p",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <p
                      className="sc-EHOje QkBzz"
                    >
                      asd
                    </p>
                  </StyledComponent>
                </styled.p>
                <Styled(styled.div)>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": false,
                          "lastClassName": "cheTxh",
                          "rules": Array [
                            "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                            "
  justify-content: space-evenly;
",
                          ],
                        },
                        "displayName": "Styled(styled.div)",
                        "foldedComponentIds": Array [
                          "sc-bdVaJa",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="sc-bdVaJa sc-bZQynM cheTxh"
                    >
                      <TextIcon
                        color="#C6C3C1"
                        icon="Send"
                        iconPosition="top"
                        onClick={[Function]}
                        text="1:1 채팅"
                        textColor="#4B4B4B"
                      >
                        <styled.div
                          iconPosition="top"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": false,
                                  "lastClassName": "bWzuYP",
                                  "rules": Array [
                                    "
    display: flex;
    flex-direction: ",
                                    [Function],
                                    ";
    width: fit-content;
    height: fit-content;
    align-items: center;
    justify-content: center;
  ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconPosition="top"
                            onClick={[Function]}
                          >
                            <div
                              className="sc-dnqmqq bWzuYP"
                              onClick={[Function]}
                            >
                              <Icon
                                color="#C6C3C1"
                                icon="Send"
                              >
                                <ForwardRef(SvgSend)
                                  fill="#C6C3C1"
                                  height="2rem"
                                  width="2rem"
                                >
                                  <svg
                                    fill="#C6C3C1"
                                    height="2rem"
                                    width="2rem"
                                  >
                                    send.svg
                                  </svg>
                                </ForwardRef(SvgSend)>
                              </Icon>
                              <styled.span
                                text="1:1 채팅"
                                textColor="#4B4B4B"
                                textSize="1rem"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-iwsKbI",
                                        "isStatic": false,
                                        "lastClassName": "kRbEdh",
                                        "rules": Array [
                                          "
    color: ",
                                          [Function],
                                          ";
    line-height: 2rem;
    padding: 1rem;
  ",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-iwsKbI",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  text="1:1 채팅"
                                  textColor="#4B4B4B"
                                  textSize="1rem"
                                >
                                  <span
                                    className="sc-iwsKbI kRbEdh"
                                  >
                                    1:1 채팅
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TextIcon>
                      <TextIcon
                        color="#C6C3C1"
                        icon="Close"
                        iconPosition="top"
                        onClick={[Function]}
                        text="삭제"
                        textColor="#4B4B4B"
                      >
                        <styled.div
                          iconPosition="top"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-dnqmqq",
                                  "isStatic": false,
                                  "lastClassName": "bWzuYP",
                                  "rules": Array [
                                    "
    display: flex;
    flex-direction: ",
                                    [Function],
                                    ";
    width: fit-content;
    height: fit-content;
    align-items: center;
    justify-content: center;
  ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-dnqmqq",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconPosition="top"
                            onClick={[Function]}
                          >
                            <div
                              className="sc-dnqmqq bWzuYP"
                              onClick={[Function]}
                            >
                              <Icon
                                color="#C6C3C1"
                                icon="Close"
                              >
                                <ForwardRef(SvgClose)
                                  fill="#C6C3C1"
                                  height="2rem"
                                  width="2rem"
                                >
                                  <svg
                                    fill="#C6C3C1"
                                    height="2rem"
                                    width="2rem"
                                  >
                                    close.svg
                                  </svg>
                                </ForwardRef(SvgClose)>
                              </Icon>
                              <styled.span
                                text="삭제"
                                textColor="#4B4B4B"
                                textSize="1rem"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-iwsKbI",
                                        "isStatic": false,
                                        "lastClassName": "kRbEdh",
                                        "rules": Array [
                                          "
    color: ",
                                          [Function],
                                          ";
    line-height: 2rem;
    padding: 1rem;
  ",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-iwsKbI",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  text="삭제"
                                  textColor="#4B4B4B"
                                  textSize="1rem"
                                >
                                  <span
                                    className="sc-iwsKbI kRbEdh"
                                  >
                                    삭제
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TextIcon>
                    </div>
                  </StyledComponent>
                </Styled(styled.div)>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </Profile>
      </div>
    </StyledComponent>
  </Styled(styled.div)>
</List>
`;
