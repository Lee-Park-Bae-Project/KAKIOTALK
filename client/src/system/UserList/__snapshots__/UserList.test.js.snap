// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserList/> match snapshot 1`] = `
<UserList
  myProfile={
    Object {
      "id": "123",
      "statusMessage": "im junow",
      "userName": "junow",
    }
  }
  onClick={[Function]}
  userList={
    Array [
      Object {
        "id": "234",
        "statusMessage": "parkpark",
        "userName": "park",
      },
      Object {
        "id": "345",
        "statusMessage": "baebae",
        "userName": "bae",
      },
    ]
  }
>
  <Styled(styled.div)>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "bQJAsI",
            "rules": Array [
              "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
              "
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  margin-top: 1rem;
  margin-bottom: auto;
  background-color: ",
              "#FEFFFF",
              ";
  /* height: 100vh; */
  
  width: 100%;
  margin: 0;
  margin-right: auto;
  margin-bottom: auto;
",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-bdVaJa",
          ],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa sc-bwzfXH bQJAsI"
      >
        <UserCard
          userName="junow"
        >
          <Styled(styled.div)>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "lastClassName": "VYauM",
                    "rules": Array [
                      "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                      "
  height: 5rem;
  justify-content: flex-start;
  padding: 0 1rem;
  background-color: ",
                      "#FEFFFF",
                      ";
  &:hover{
    background-color: ",
                      "#F1F2F2",
                      ";
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-bdVaJa",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-bdVaJa sc-EHOje VYauM"
              >
                <Styled(styled.div)>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": false,
                          "lastClassName": "iEkADQ",
                          "rules": Array [
                            "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                            "
  justify-content: flex-start;

",
                          ],
                        },
                        "displayName": "Styled(styled.div)",
                        "foldedComponentIds": Array [
                          "sc-bdVaJa",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="sc-bdVaJa sc-bZQynM iEkADQ"
                    >
                      <TextIcon
                        color="#C6C3C1"
                        icon="Account"
                        text="junow"
                      >
                        <styled.div
                          iconPosition="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-htoDjs",
                                  "isStatic": false,
                                  "lastClassName": "bdJNWD",
                                  "rules": Array [
                                    "
    display: flex;
    flex-direction: ",
                                    [Function],
                                    ";
    width: fit-content;
    height: fit-content;
    align-items: center;
    justify-content: center;
  ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-htoDjs",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconPosition="left"
                          >
                            <div
                              className="sc-htoDjs bdJNWD"
                            >
                              <Icon
                                color="#C6C3C1"
                                icon="Account"
                              >
                                <ForwardRef(SvgAccount)
                                  fill="#C6C3C1"
                                  height="2rem"
                                  width="2rem"
                                >
                                  <svg
                                    fill="#C6C3C1"
                                    height="2rem"
                                    width="2rem"
                                  >
                                    account.svg
                                  </svg>
                                </ForwardRef(SvgAccount)>
                              </Icon>
                              <styled.span
                                text="junow"
                                textColor="black"
                                textSize="1rem"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-dnqmqq",
                                        "isStatic": false,
                                        "lastClassName": "eCurCS",
                                        "rules": Array [
                                          "
    color: ",
                                          [Function],
                                          ";
    line-height: 2rem;
    padding: 1rem;
  ",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-dnqmqq",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  text="junow"
                                  textColor="black"
                                  textSize="1rem"
                                >
                                  <span
                                    className="sc-dnqmqq eCurCS"
                                  >
                                    junow
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TextIcon>
                    </div>
                  </StyledComponent>
                </Styled(styled.div)>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </UserCard>
        <styled.hr>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-iwsKbI",
                  "isStatic": false,
                  "lastClassName": "byAdSv",
                  "rules": Array [
                    "
  width: 90%;
  margin: 1rem auto;
  border-color: ",
                    "#C6C3C1",
                    ";
",
                  ],
                },
                "displayName": "styled.hr",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-iwsKbI",
                "target": "hr",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <hr
              className="sc-iwsKbI byAdSv"
            />
          </StyledComponent>
        </styled.hr>
        <Styled(styled.div)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "fslGAT",
                  "rules": Array [
                    "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                    "
  flex-direction: row;
  justify-content: flex-start;
  padding: 0 1rem;
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-bdVaJa",
                ],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-bdVaJa sc-htpNat fslGAT"
            >
              <styled.h3>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": false,
                        "lastClassName": "cVKdGy",
                        "rules": Array [
                          "
  text-indent: 1rem;
",
                        ],
                      },
                      "displayName": "styled.h3",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "h3",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h3
                    className="sc-bxivhb cVKdGy"
                  >
                    친구
                  </h3>
                </StyledComponent>
              </styled.h3>
              <styled.span>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "inZLTK",
                        "rules": Array [
                          "
  text-indent: 0.5rem;
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <span
                    className="sc-ifAKCX inZLTK"
                  >
                    2
                  </span>
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </Styled(styled.div)>
        <UserCard
          key="234"
          onClick={[Function]}
          statusMessage="parkpark"
          userName="park"
        >
          <Styled(styled.div)
            onClick={[Function]}
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "lastClassName": "VYauM",
                    "rules": Array [
                      "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                      "
  height: 5rem;
  justify-content: flex-start;
  padding: 0 1rem;
  background-color: ",
                      "#FEFFFF",
                      ";
  &:hover{
    background-color: ",
                      "#F1F2F2",
                      ";
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-bdVaJa",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              onClick={[Function]}
            >
              <div
                className="sc-bdVaJa sc-EHOje VYauM"
                onClick={[Function]}
              >
                <Styled(styled.div)>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": false,
                          "lastClassName": "iEkADQ",
                          "rules": Array [
                            "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                            "
  justify-content: flex-start;

",
                          ],
                        },
                        "displayName": "Styled(styled.div)",
                        "foldedComponentIds": Array [
                          "sc-bdVaJa",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="sc-bdVaJa sc-bZQynM iEkADQ"
                    >
                      <TextIcon
                        color="#C6C3C1"
                        icon="Account"
                        text="park"
                      >
                        <styled.div
                          iconPosition="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-htoDjs",
                                  "isStatic": false,
                                  "lastClassName": "bdJNWD",
                                  "rules": Array [
                                    "
    display: flex;
    flex-direction: ",
                                    [Function],
                                    ";
    width: fit-content;
    height: fit-content;
    align-items: center;
    justify-content: center;
  ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-htoDjs",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconPosition="left"
                          >
                            <div
                              className="sc-htoDjs bdJNWD"
                            >
                              <Icon
                                color="#C6C3C1"
                                icon="Account"
                              >
                                <ForwardRef(SvgAccount)
                                  fill="#C6C3C1"
                                  height="2rem"
                                  width="2rem"
                                >
                                  <svg
                                    fill="#C6C3C1"
                                    height="2rem"
                                    width="2rem"
                                  >
                                    account.svg
                                  </svg>
                                </ForwardRef(SvgAccount)>
                              </Icon>
                              <styled.span
                                text="park"
                                textColor="black"
                                textSize="1rem"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-dnqmqq",
                                        "isStatic": false,
                                        "lastClassName": "eCurCS",
                                        "rules": Array [
                                          "
    color: ",
                                          [Function],
                                          ";
    line-height: 2rem;
    padding: 1rem;
  ",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-dnqmqq",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  text="park"
                                  textColor="black"
                                  textSize="1rem"
                                >
                                  <span
                                    className="sc-dnqmqq eCurCS"
                                  >
                                    park
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TextIcon>
                      <styled.span>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-gzVnrw",
                                "isStatic": false,
                                "lastClassName": "ielJtS",
                                "rules": Array [
                                  "
  font-size: ",
                                  "0.8rem",
                                  ";
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-gzVnrw",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="sc-gzVnrw ielJtS"
                          >
                            parkpark
                          </span>
                        </StyledComponent>
                      </styled.span>
                    </div>
                  </StyledComponent>
                </Styled(styled.div)>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </UserCard>
        <UserCard
          key="345"
          onClick={[Function]}
          statusMessage="baebae"
          userName="bae"
        >
          <Styled(styled.div)
            onClick={[Function]}
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "lastClassName": "VYauM",
                    "rules": Array [
                      "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                      "
  height: 5rem;
  justify-content: flex-start;
  padding: 0 1rem;
  background-color: ",
                      "#FEFFFF",
                      ";
  &:hover{
    background-color: ",
                      "#F1F2F2",
                      ";
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-bdVaJa",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              onClick={[Function]}
            >
              <div
                className="sc-bdVaJa sc-EHOje VYauM"
                onClick={[Function]}
              >
                <Styled(styled.div)>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": false,
                          "lastClassName": "iEkADQ",
                          "rules": Array [
                            "
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
",
                            "
  justify-content: flex-start;

",
                          ],
                        },
                        "displayName": "Styled(styled.div)",
                        "foldedComponentIds": Array [
                          "sc-bdVaJa",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="sc-bdVaJa sc-bZQynM iEkADQ"
                    >
                      <TextIcon
                        color="#C6C3C1"
                        icon="Account"
                        text="bae"
                      >
                        <styled.div
                          iconPosition="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-htoDjs",
                                  "isStatic": false,
                                  "lastClassName": "bdJNWD",
                                  "rules": Array [
                                    "
    display: flex;
    flex-direction: ",
                                    [Function],
                                    ";
    width: fit-content;
    height: fit-content;
    align-items: center;
    justify-content: center;
  ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-htoDjs",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconPosition="left"
                          >
                            <div
                              className="sc-htoDjs bdJNWD"
                            >
                              <Icon
                                color="#C6C3C1"
                                icon="Account"
                              >
                                <ForwardRef(SvgAccount)
                                  fill="#C6C3C1"
                                  height="2rem"
                                  width="2rem"
                                >
                                  <svg
                                    fill="#C6C3C1"
                                    height="2rem"
                                    width="2rem"
                                  >
                                    account.svg
                                  </svg>
                                </ForwardRef(SvgAccount)>
                              </Icon>
                              <styled.span
                                text="bae"
                                textColor="black"
                                textSize="1rem"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-dnqmqq",
                                        "isStatic": false,
                                        "lastClassName": "eCurCS",
                                        "rules": Array [
                                          "
    color: ",
                                          [Function],
                                          ";
    line-height: 2rem;
    padding: 1rem;
  ",
                                        ],
                                      },
                                      "displayName": "styled.span",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-dnqmqq",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  text="bae"
                                  textColor="black"
                                  textSize="1rem"
                                >
                                  <span
                                    className="sc-dnqmqq eCurCS"
                                  >
                                    bae
                                  </span>
                                </StyledComponent>
                              </styled.span>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TextIcon>
                      <styled.span>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-gzVnrw",
                                "isStatic": false,
                                "lastClassName": "ielJtS",
                                "rules": Array [
                                  "
  font-size: ",
                                  "0.8rem",
                                  ";
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-gzVnrw",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="sc-gzVnrw ielJtS"
                          >
                            baebae
                          </span>
                        </StyledComponent>
                      </styled.span>
                    </div>
                  </StyledComponent>
                </Styled(styled.div)>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </UserCard>
      </div>
    </StyledComponent>
  </Styled(styled.div)>
</UserList>
`;
